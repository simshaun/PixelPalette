<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <!-- Full version number to display -->
  <?define VersionNumber="!(bind.FileVersion.PixelPaletteExe)" ?>

  <!--
   Upgrade code HAS to be the same for all updates.
   Once you've chosen it don't change it.
   -->
  <?define UpgradeCode="1B89E3EE-F6D6-425B-B70E-01D4CB74111F" ?>

  <!-- The URL for add/remove programs -->
  <?define InfoURL="https://github.com/simshaun/PixelPalette" ?>

  <!-- The upgrade code must never change as long as the product lives! -->
  <!-- Product IDs must be autogenerated (*) or else major upgrades will not work -->
  <Product Id="*" Name="!(loc.ApplicationName)" Language="!(loc.Language)" Version="$(var.VersionNumber)" Manufacturer="!(loc.ManufacturerFullName)" UpgradeCode="$(var.UpgradeCode)">

    <!-- Package IDs are valid for a single package version only - they are autogenerated by WiX -->
    <!-- And ALWAYS install per machine!!! -->
    <Package Id="*" InstallerVersion="200" Compressed="yes" InstallScope="perMachine" Description="!(loc.ProductDescription)" Comments="!(loc.Comments) $(var.VersionNumber)" />

    <!-- WixUI displays a EULA screen. Show a simple EULA. -->
    <WixVariable Id="WixUILicenseRtf" Value="eula.rtf" />

    <!-- Define icons -->
    <Icon Id="APP_ICON" SourceFile="icon.ico" />

    <!-- Set properties for add/remove programs -->
    <Property Id="ARPPRODUCTICON" Value="APP_ICON" />
    <Property Id="ARPHELPLINK" Value="$(var.InfoURL)" />
    <Property Id="ARPNOREPAIR" Value="yes" Secure="yes" /> <!-- Remove repair -->

    <!-- Offer option to change installation directory -->
    <!-- This requires WixUIExtension.dll to be added as a reference in the project. -->
    <UIRef Id="WixUI_InstallDir" />
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />

    <!-- Upgrade logic -->
    <!-- AllowSameVersionUpgrades -> Always upgrade, never allow two versions to be installed next to each other -->
    <!-- AllowSameVersionUpgrades causes ICE61 which must be ignored -->
    <MajorUpgrade DowngradeErrorMessage="!(loc.NewerInstalled)" AllowSameVersionUpgrades="yes" />

    <MediaTemplate EmbedCab="yes" />

    <!-- Outermost folder (kind of virtual). Fixed entry. -->
    <Directory Id="TARGETDIR" Name="SourceDir">

      <!-- We start building our directory structure here -->
      <!-- "ProgramFilesFolder" is a variable containing the absolute path. -->
      <!-- For a list of folder variables, see: http://msdn.microsoft.com/en-us/library/aa372057%28VS.85%29.aspx -->
      <Directory Id="ProgramFilesFolder">

        <!-- All folders from here on are relative to their parent. -->

        <Directory Id="ProgramFilesI6" Name="!(loc.ManufacturerName)">

          <!-- INSTALLFOLDER is a property name. Needed for WixUI_InstallDir -->
          <Directory Id="INSTALLFOLDER" Name="!(loc.ApplicationName)">

            <!--
            Define components, the building blocks of MSIs.
                 Rule: A component should only contain items that belong together so strongly
                 that they always need to be installed or removed together. If this means a
                 single file, then your components will contain a single file each. This is
                 not only normal but exactly what you're expected to do. Don't be afraid,
                 Windows Installer can efficiently handle thousands of components or more,
                 if needed.
            -->

            <!-- Installation directory as a component so it can be emptied during uninstall. -->
            <!-- (by default, files added by someone other than Windows Installer are not removed) -->
            <Component Id="INSTALLFOLDER_comp" Guid="1E2A3FB1-2000-4FD8-BFFA-B8D54E8FC451">
              <CreateFolder />
              <RemoveFile Id="RemoveFilesFromAppDirectory" Name="*.*" On="uninstall" />
            </Component>

            <!-- Main program file -->
            <Component Id="PixelPalette.exe_comp" Guid="*">
              <File Source="$(var.HarvestPath)\PixelPalette.exe" Id="PixelPaletteExe" KeyPath="yes" />
            </Component>

            <!-- Installation indicator file (file we use to detect installation (i.e. not portable) for proper settings location) -->
            <Component Id="InstallationIndicator_comp" Guid="*">
              <File Source="IS_INSTALLATION.do-not-delete" Id="InstallationIndicator" KeyPath="yes" />
            </Component>

          </Directory>
        </Directory>
      </Directory>

      <!-- "ProgramMenuFolder" is a variable containing the absolute path. -->
      <Directory Id="ProgramMenuFolder">
        <Directory Id="APP_STARTMENU_FOLDER" Name="!(loc.ApplicationName)"/>
      </Directory>
    </Directory>

    <!-- Set up a shortcut in our Start Menu folder. -->
    <DirectoryRef Id="APP_STARTMENU_FOLDER">
      <Component Id="ApplicationShortcut_comp">
        <Shortcut Id="ApplicationStartMenuShortcut"
          Name="PixelPalette"
          Icon="APP_ICON"
          Description="Simple color picker and manipulation tool"
          Target="[INSTALLFOLDER]PixelPalette.exe"
          WorkingDirectory="INSTALLFOLDER"/>
        <RemoveFolder Id="CleanUpShortCut" Directory="APP_STARTMENU_FOLDER" On="uninstall"/>
        <RegistryValue Root="HKCU" Key="Software\simshaun\PixelPalette" Name="installed" Type="integer" Value="1" KeyPath="yes"/>
      </Component>
    </DirectoryRef>

    <!-- Features define which parts of the application can be installed in a custom installation -->
    <Feature Id="Complete" Title="!(loc.ApplicationName)" Level="1">
      <ComponentGroupRef Id="HeatGenerated_comp" />
      <ComponentRef Id="INSTALLFOLDER_comp" />
      <ComponentRef Id="PixelPalette.exe_comp" />
      <ComponentRef Id="InstallationIndicator_comp" />
      <ComponentRef Id="ApplicationShortcut_comp" />
    </Feature>
  </Product>
</Wix>
